{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/components.module.ts","webpack:///src/app/components/train-couch/train-couch.component.ts","webpack:///src/app/components/train-couch/train-couch.component.html","webpack:///src/app/services/services.module.ts","webpack:///src/app/services/trainSeats/trainseats.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ComponentsModule","TrainCouchComponent","TrainSeats","rows","seats","number","status","seat","name","mobile","totalSeats","window","alert","body","user","mobileNumber","registerSeats","subscribe","sucess","console","log","bookedSeats","length","getAllSeatsData","resetAll","data","getSeats","ServicesModule","TrainseatsService","http","baseUrl","get","post","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\n// import { TrainSeatsComponent } from './train-seats/train-seats.component';\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  title = \"unstopProject\";\n}\n","<app-train-couch></app-train-couch>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { ComponentsModule } from \"./components/components.module\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, ComponentsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TrainCouchComponent } from \"./train-couch/train-couch.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { ServicesModule } from \"../services/services.module\";\n// import { MatInputModule } from \"@angular/material/input\";\n// import { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\n// import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\n@NgModule({\n  declarations: [TrainCouchComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, ServicesModule],\n  exports: [TrainCouchComponent],\n})\nexport class ComponentsModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ServicesModule } from \"src/app/services/services.module\";\nimport { TrainseatsService } from \"src/app/services/trainSeats/trainseats.service\";\n\n@Component({\n  selector: \"app-train-couch\",\n  templateUrl: \"./train-couch.component.html\",\n  styleUrls: [\"./train-couch.component.css\"],\n})\nexport class TrainCouchComponent implements OnInit {\n  rows = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"k\"];\n  seats = [\n    { number: 1, status: \"available\" },\n    { number: 2, status: \"available\" },\n    { number: 3, status: \"available\" },\n    { number: 4, status: \"available\" },\n    { number: 5, status: \"available\" },\n    { number: 6, status: \"available\" },\n    { number: 7, status: \"available\" },\n  ];\n  name: string;\n  mobile: number;\n  totalSeats: number;\n  getSeats;\n  bookedSeats;\n  onSeatClick(seat: any) {\n    if (seat.status === \"available\") {\n      seat.status = \"booked\";\n    } else if (seat.status === \"reserved\") {\n      seat.status = \"available\";\n    }\n  }\n  constructor(private TrainSeats: TrainseatsService) {\n    // let seats = new TrainseatsService();\n  }\n  registerSeats() {\n    if (!this.name || !this.mobile || !this.totalSeats)\n      return window.alert(\"Enter all details\");\n    if (this.totalSeats > 7) {\n      return window.alert(\"you cant book more than 7 seats\");\n    }\n    let body = {\n      user: {\n        name: this.name,\n        mobileNumber: this.mobile,\n        totalSeats: this.totalSeats,\n      },\n    };\n    this.TrainSeats.registerSeats(body).subscribe((sucess) => {\n      console.log(sucess, \"register\");\n      this.bookedSeats = sucess;\n\n      if (!sucess || this.bookedSeats.length == 0)\n        return window.alert(\"No seats left\");\n      this.getAllSeatsData();\n      // this.getSeats = sucess;\n    });\n    // console.log(\"hit funct\", this.name, this.mobile, this.totalSeats);\n  }\n  resetAll() {\n    //reset all\n\n    this.TrainSeats.resetAll().subscribe((data) => {\n      if (!data) {\n        return window.alert(\"error in reset\");\n      }\n      this.getAllSeatsData();\n    });\n  }\n  getAllSeatsData() {\n    this.TrainSeats.getSeats().subscribe((data) => {\n      console.log(data, \"seats\");\n      this.getSeats = data;\n    });\n  }\n  ngOnInit(): void {\n    // this.TrainSeats.getSeats().subscribe((data) => {\n    //   console.log(data, \"seats\");\n    //   this.getSeats = data;\n    // });\n    this.getAllSeatsData();\n  }\n}\n","<div>\n  <h1 style=\"text-align: center\">Booking System</h1>\n  <div class=\"divideTwoDiv\">\n    <div class=\"train-coach\">\n      <div class=\"row\" *ngFor=\"let data of getSeats; let i = index\">\n        <ng-container *ngIf=\"i &lt;=9\">\n          <div class=\"seat\" *ngFor=\"let seat of data.seats\">\n            <button\n              [ngClass]=\"{\n                available: seat.status === 'available',\n                booked: seat.status === 'booked',\n                reserved: seat.status === 'reserved'\n              }\"\n            >\n              <i class=\"fa-solid fa-chair\"></i>\n              {{ data.row }}{{ seat.seatNumber }}\n            </button>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"i === 10\">\n          <div class=\"seat\" *ngFor=\"let seat of data.seats; let j = index\">\n            <button\n              [ngClass]=\"{\n                available: seat.status === 'available',\n                booked: seat.status === 'booked',\n                reserved: seat.status === 'reserved'\n              }\"\n              *ngIf=\"j &lt;= 2\"\n            >\n              <i class=\"fa-solid fa-chair\"></i>\n              {{ data.row }}{{ seat.seatNumber }}\n            </button>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n    <!-- demo -->\n    <!-- <div class=\"train-coach\">\n    <div class=\"row\" *ngFor=\"let row of rows; let i = index\">\n      <ng-container *ngIf=\"i &lt;=9\">\n        <div class=\"seat\" *ngFor=\"let seat of seats\">\n          <button\n            [ngClass]=\"{\n              available: seat.status === 'available',\n              booked: seat.status === 'booked',\n              reserved: seat.status === 'reserved'\n            }\"\n          >\n            <i class=\"fa-solid fa-chair\"></i>\n            {{ row }}{{ seat.number }}\n          </button>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"i === 10\">\n        <div class=\"seat\" *ngFor=\"let seat of seats; let j = index\">\n          <button\n            [ngClass]=\"{\n              available: seat.status === 'available',\n              booked: seat.status === 'booked',\n              reserved: seat.status === 'reserved'\n            }\"\n            *ngIf=\"j &lt;= 2\"\n          >\n            <i class=\"fa-solid fa-chair\"></i>\n            {{ row }}{{ seat.number }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div> -->\n    <div class=\"booking\">\n      <h1>Book here!</h1>\n\n      <div class=\"bookingInput\">\n        <div class=\"inputLabel\">\n          <label>Name</label>\n          <label>Mobile </label>\n          <label>Total seats</label>\n        </div>\n        <div class=\"inputValues\">\n          <input [(ngModel)]=\"name\" type=\"text\" />\n\n          <input [(ngModel)]=\"mobile\" type=\"text\" />\n\n          <input [(ngModel)]=\"totalSeats\" type=\"number\" />\n          <button (click)=\"registerSeats()\" class=\"registerButton\">\n            Book Now\n          </button>\n        </div>\n      </div>\n      <!-- *ngIf=\"bookedSeats && bookedSeats.length > 0\" -->\n\n      <div class=\"displayBooked\" *ngIf=\"bookedSeats && bookedSeats.length > 0\">\n        <h2>Reserved seats</h2>\n        <!-- <div *ngFor=\"let data; in: bookedSeats\">\n          <p>{{ data.seatRow }}{{ data.seatNumber }}</p>\n        </div> -->\n\n        <div class=\"userDetail\">\n          <div class=\"userDisplay\">\n            <label>Name:</label>\n            <!-- <p>33</p> -->\n\n            <p>{{ bookedSeats[0].customer.name }}</p>\n          </div>\n          <div class=\"userDisplay\">\n            <label>Mobile:</label>\n            <!-- <p>33</p> -->\n\n            <p>{{ bookedSeats[0].customer.mobileNumber }}33</p>\n          </div>\n          <div class=\"userDisplay\">\n            <label>Total seats:</label>\n            <p>{{ bookedSeats.length }}</p>\n          </div>\n        </div>\n\n        <div class=\"seatsDisplay\">\n          <p *ngFor=\"let data of bookedSeats\">\n            {{ data.seatRow }}{{ data.seatNumber }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div>\n    <button (click)=\"resetAll()\" class=\"button\">\n      <i class=\"fa-solid fa-rotate-left\"></i>Reset\n    </button>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { TrainseatsService } from \"./trainSeats/trainseats.service\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule],\n  providers: [TrainseatsService],\n})\nexport class ServicesModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TrainseatsService {\n  // url = \"http//:localhost:3000\";\n  private baseUrl = \"http://localhost:3000\";\n  constructor(private http: HttpClient) {}\n\n  getSeats() {\n    console.log(this.baseUrl, \"url\");\n    return this.http.get(`${this.baseUrl}/trainSeats/getAllSeats`);\n  }\n  registerSeats(data) {\n    return this.http.post(`${this.baseUrl}/trainSeats/bookSeats`, data);\n  }\n  resetAll() {\n    return this.http.get(`${this.baseUrl}/trainSeats/resetAll`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}